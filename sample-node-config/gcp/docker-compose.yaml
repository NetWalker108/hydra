version: "3.9"

services:
  cardano-node:
    image: inputoutput/cardano-node:${CARDANO_IMAGE_ID:-latest}
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    volumes:
      - .:/data
      - ./devnet:/devnet
    working_dir: /data
    environment:
      - CARDANO_SOCKET_PATH=/devnet/node.socket # used by cardano-node
      - CARDANO_NODE_SOCKET_PATH=/devnet/node.socket # used by cardano-cli
    command:
      [ "run"
      , "--config", "/devnet/cardano-node/config.json"
      , "--topology", "/devnet/cardano-node/topology.json"
      , "--database-path", "/devnet/db"
      ]


  hydra-node:
    image: ghcr.io/input-output-hk/hydra-node:${HYDRA_IMAGE_ID:-latest}
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    volumes:
      - .:/data:ro
      - hydra-data:/hydra-data:rw
      - ./devnet:/devnet
    ports:
      - "4001:4001"
      - "5001:5001"
    command:
        [ "--node-id", "arnaud"
        , "--api-host" , "0.0.0.0"
        , "--host", "0.0.0.0"
        , "--port", "5003"
        , "--monitoring-port", "6001"
        , "--persistence-dir", "/hydra-data"
        , "--hydra-signing-key", "/data/keys/arnaud-hydra.sk"
        , "--cardano-signing-key", "/data/keys/arnaud.sk"
        , "--ledger-genesis", "/data/genesis-shelley.json"
        , "--ledger-protocol-parameters", "/data/protocol-parameters.json"
        , "--network-id", "${NETWORK_MAGIC}"
        , "--hydra-scripts-tx-id", "${HYDRA_SCRIPTS_TX_ID}"
        , "--node-socket", "/devnet/node.socket"
        , "--peer", "fk.ncoding.at:5001" # sebastian
        , "--cardano-verification-key", "/data/keys/sebastian.cardano.vk"
        , "--hydra-verification-key", "/data/keys/sebastian.hydra.vk"
        # "--peer","13.39.80.222:5001" # pascal
        # "--cardano-verification-key","/data/keys/pascal.cardano.vk"
        # "--hydra-verification-key","/data/keys/pascal.hydra.vk"
        , "--peer","13.38.49.252:5001" # sasha
        , "--cardano-verification-key","/data/keys/sasha.cardano.vk"
        , "--hydra-verification-key","/data/keys/sasha.hydra.vk"
        , "--peer","13.38.189.209:5001" # franco
        , "--cardano-verification-key","/data/keys/franco.cardano.vk"
        , "--hydra-verification-key","/data/keys/franco.hydra.vk"
      ]

  hydra-tui:
    image: ghcr.io/input-output-hk/hydra-tui:${HYDRA_IMAGE_ID:-latest}
    profiles:
      - tui
    command:
      [ "--connect", "hydra-node:4001"
      , "--node-socket", "/devnet/node.socket"
      , "--network-id", "${NETWORK_MAGIC}"
      , "--cardano-signing-key", "/data/arnaud.sk"
      ]
    volumes:
      - .:/data:ro
      - ./devnet:/devnet

  hydraw:
    image: ghcr.io/input-output-hk/hydraw:latest
    profiles:
      - hydraw
    entrypoint:
      [ "hydraw" ]
    environment:
      - HYDRAW_CARDANO_SIGNING_KEY=/data/arnaud.sk
      - HYDRA_API_HOST=hydra-node:4001
    volumes:
      - .:/data:ro
    ports:
      - "80:1337"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    volumes:
    - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro

volumes:
  hydra-data:
